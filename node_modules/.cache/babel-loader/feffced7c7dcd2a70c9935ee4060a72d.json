{"ast":null,"code":"import { makeAutoObservable, autorun } from \"mobx\";\nimport api from \"../services/API\";\nexport class Store {\n  constructor() {\n    this.movies = [];\n    this.loading = false;\n    this.search = '';\n\n    this.fetchMovies = async () => {\n      if (this.loading) {\n        return;\n      }\n\n      ;\n      this.setLoading(true);\n\n      try {\n        const movies = await api.getMovies(this.search);\n        this.setMovies(movies);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.setLoading(false);\n      }\n\n      ;\n    };\n\n    this.chooseF = 0;\n    this.chooseA = 0;\n    this.chooseD = 0;\n    makeAutoObservable(this);\n    autorun(() => {\n      if (this.search = \"A\") {\n        console.log(\"Escolheu a letra A\");\n        this.chooseA = this.chooseA + 1;\n      } else if (this.search === \"D\") {\n        console.log(\"Escolheu a letra D\");\n        this.chooseD = this.chooseD + 1;\n      } else if (this.search === \"F\") {\n        console.log(\"Escolheu a letra F\");\n        this.chooseF = this.chooseF + 1;\n      } else if (this.ChoosesA) {\n        console.log(\"Ta dificil ai meu patrão?\");\n      }\n    });\n  }\n\n  setSearch(search) {\n    this.search = search;\n  }\n\n  setMovies(movies) {\n    this.movies = movies;\n  }\n\n  setLoading(loading) {\n    this.loading = loading;\n  }\n\n  get ChoosesA() {\n    return this.chooseA > 10;\n  }\n\n}\n;","map":{"version":3,"sources":["/home/manoel/Codigos/treinamento/aulas/05/reactmovies/src/Home/store.ts"],"names":["makeAutoObservable","autorun","api","Store","constructor","movies","loading","search","fetchMovies","setLoading","getMovies","setMovies","e","console","error","chooseF","chooseA","chooseD","log","ChoosesA","setSearch"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,OAA7B,QAA4C,MAA5C;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,MAAMC,KAAN,CAAY;AACfC,EAAAA,WAAW,GAAG;AAAA,SAiBPC,MAjBO,GAiBiB,EAjBjB;AAAA,SAkBNC,OAlBM,GAkBa,KAlBb;AAAA,SAmBNC,MAnBM,GAmBW,EAnBX;;AAAA,SAgCNC,WAhCM,GAgCQ,YAAY;AAC9B,UAAI,KAAKF,OAAT,EAAkB;AACd;AACH;;AAAA;AACD,WAAKG,UAAL,CAAgB,IAAhB;;AAEI,UAAI;AACA,cAAMJ,MAAM,GAAG,MAAMH,GAAG,CAACQ,SAAJ,CAAc,KAAKH,MAAnB,CAArB;AACA,aAAKI,SAAL,CAAeN,MAAf;AACH,OAHD,CAGE,OAAOO,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,OALD,SAKU;AACN,aAAKH,UAAL,CAAgB,KAAhB;AACH;;AAAA;AACR,KA9Ca;;AAAA,SA+CVM,OA/CU,GA+CA,CA/CA;AAAA,SAgDPC,OAhDO,GAgDG,CAhDH;AAAA,SAiDPC,OAjDO,GAiDG,CAjDH;AACVjB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,IAAAA,OAAO,CAAC,MAAM;AACV,UAAI,KAAKM,MAAL,GAAc,GAAlB,EAAuB;AACnBM,QAAAA,OAAO,CAACK,GAAR,CAAY,oBAAZ;AACA,aAAKF,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACH,OAHD,MAGO,IAAG,KAAKT,MAAL,KAAgB,GAAnB,EAAuB;AAC1BM,QAAAA,OAAO,CAACK,GAAR,CAAY,oBAAZ;AACA,aAAKD,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACH,OAHM,MAGA,IAAI,KAAKV,MAAL,KAAgB,GAApB,EAAyB;AAC5BM,QAAAA,OAAO,CAACK,GAAR,CAAY,oBAAZ;AACA,aAAKH,OAAL,GAAe,KAAKA,OAAL,GAAe,CAA9B;AACH,OAHM,MAGA,IAAG,KAAKI,QAAR,EAAiB;AACpBN,QAAAA,OAAO,CAACK,GAAR,CAAY,2BAAZ;AACH;AACJ,KAbM,CAAP;AAcH;;AAKME,EAAAA,SAAS,CAACb,MAAD,EAAiB;AAC7B,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACMI,EAAAA,SAAS,CAACN,MAAD,EAAwB;AACpC,SAAKA,MAAL,GAAcA,MAAd;AACH;;AAEOI,EAAAA,UAAU,CAACH,OAAD,EAAmB;AACjC,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAoBW,MAARa,QAAQ,GAAE;AACV,WAAO,KAAKH,OAAL,GAAe,EAAtB;AACH;;AArDc;AAsDlB","sourcesContent":["import { makeAutoObservable, autorun } from \"mobx\";\nimport * as types from '../declarations/types';\nimport api from \"../services/API\";\n\nexport class Store {\n    constructor() {\n        makeAutoObservable(this);\n        autorun(() => {\n            if (this.search = \"A\") {\n                console.log(\"Escolheu a letra A\");\n                this.chooseA = this.chooseA + 1;\n            } else if(this.search === \"D\"){ \n                console.log(\"Escolheu a letra D\")\n                this.chooseD = this.chooseD + 1;\n            } else if (this.search === \"F\") {  \n                console.log(\"Escolheu a letra F\")\n                this.chooseF = this.chooseF + 1;\n            } else if(this.ChoosesA){\n                console.log(\"Ta dificil ai meu patrão?\")\n            }\n        })\n    };\n    public movies: types.Movie[] = [];\n    public  loading: boolean = false;\n    public  search: string = '';\n    \n    public setSearch(search: string) {\n        this.search = search;\n    };\n    public setMovies(movies: types.Movie[]) {\n        this.movies = movies;\n    };\n\n    public  setLoading(loading: boolean) {\n        this.loading = loading;\n    };\n\n    public  fetchMovies = async () => {\n        if (this.loading) {\n            return;\n        };\n        this.setLoading(true);\n\n            try {\n                const movies = await api.getMovies(this.search);\n                this.setMovies(movies);\n            } catch (e) {\n                console.error(e);\n            } finally {\n                this.setLoading(false);\n            };\n    };\n\tpublic chooseF = 0;\n    public chooseA = 0;\n    public chooseD = 0;\n    get ChoosesA(){\n        return this.chooseA > 10\n    }\n};"]},"metadata":{},"sourceType":"module"}