{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport api from \"../services/API\";\nexport class Store {\n  constructor() {\n    this.movies = [];\n    this.loading = false;\n    this.search = '';\n\n    this.fetchMovies = async () => {\n      if (this.loading) {\n        return;\n      }\n\n      ;\n      this.setLoading(true);\n\n      try {\n        const movies = await api.getMovies(this.search);\n        this.setMovies;\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.setLoading(false);\n      }\n\n      ;\n    };\n\n    makeAutoObservable(this);\n  }\n\n  setSearch(search) {\n    this.search = search;\n  }\n\n  get setMovies() {\n    return this.movies = this.movies;\n  }\n\n  setLoading(loading) {\n    this.loading = loading;\n  }\n\n}\n;","map":{"version":3,"sources":["/home/manoel/Codigos/treinamento/aulas/05/reactmovies/src/Home/store.ts"],"names":["makeAutoObservable","api","Store","constructor","movies","loading","search","fetchMovies","setLoading","getMovies","setMovies","e","console","error","setSearch"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,MAAMC,KAAN,CAAY;AACfC,EAAAA,WAAW,GAAG;AAAA,SAGPC,MAHO,GAGiB,EAHjB;AAAA,SAINC,OAJM,GAIa,KAJb;AAAA,SAKNC,MALM,GAKW,EALX;;AAAA,SAiBNC,WAjBM,GAiBQ,YAAY;AAC9B,UAAI,KAAKF,OAAT,EAAkB;AACd;AACH;;AAAA;AACD,WAAKG,UAAL,CAAgB,IAAhB;;AAEI,UAAI;AACA,cAAMJ,MAAM,GAAG,MAAMH,GAAG,CAACQ,SAAJ,CAAc,KAAKH,MAAnB,CAArB;AACA,aAAKI,SAAL;AACH,OAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,OALD,SAKU;AACN,aAAKH,UAAL,CAAgB,KAAhB;AACH;;AAAA;AACR,KA/Ba;;AACVR,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAIMc,EAAAA,SAAS,CAACR,MAAD,EAAiB;AAC7B,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACmB,MAATI,SAAS,GAAG;AACnB,WAAO,KAAKN,MAAL,GAAc,KAAKA,MAA1B;AACH;;AAEOI,EAAAA,UAAU,CAACH,OAAD,EAAmB;AACjC,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAhBc;AAiClB","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport * as types from '../declarations/types';\nimport api from \"../services/API\";\n\nexport class Store {\n    constructor() {\n        makeAutoObservable(this);\n    };\n    public movies: types.Movie[] = [];\n    public  loading: boolean = false;\n    public  search: string = '';\n    public setSearch(search: string) {\n        this.search = search;\n    };\n    public get setMovies() {\n        return this.movies = this.movies;\n    };\n\n    public  setLoading(loading: boolean) {\n        this.loading = loading;\n    };\n\n    public  fetchMovies = async () => {\n        if (this.loading) {\n            return;\n        };\n        this.setLoading(true);\n\n            try {\n                const movies = await api.getMovies(this.search);\n                this.setMovies;\n            } catch (e) {\n                console.error(e);\n            } finally {\n                this.setLoading(false);\n            };\n    };\n};"]},"metadata":{},"sourceType":"module"}